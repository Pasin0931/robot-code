#include <POP32.h>
uint8_t Unit_sensor = 4;
uint16_t sensor_pin[3];
uint16_t White_sensor_values[] = {3277, 3248, 3360, 3258 }; //{550 , 690, 720, 760, 500, 140, 500, 190 }; :nor --> {3768, 3602, 3804, 3777};
uint16_t Black_sensor_values[] = {270, 270, 292, 279 }; //{3880, 3800, 3900, 3900, 3900, 1750, 3850, 2800 }; --> {646, 375, 788, 513 };
uint32_t Last_Position; 
float PID, P, I, D;
float kp;
float ki;
float kd;
int B_speed, L_speed, R_speed;
int error, sum_error, pre_error;
int count = 0;
int target;
int last_error, speeding, power;
int a,b,c,d;

void setup()
{
  Serial.begin(9600);
  waitSW_OK();
  delay(500);

  servo(6, 0);
  delay(100);

  // moc(35, 35, 1900);
  // moc(35, 35, 1900);
  movef(30, 30);
  delay(500);

  drp(0.052 , 0 , 1.2 , 40, 1700);
  set(6); // 1
  bckk(40, 400);
  turnLeft(34 , 34);
  PID_Time(0.052 , 0 , 1.2 , 33 , 1400);

  cRtR(0.052 , 0 , 1.2 , 30 , 34 , 34 , 30 , 220 , 1300);
  set(6); // 2
  turnLeft(25 , 25);

  cRtR(0.032 , 0 , 1 , 32 , 28 , 28 , 30 , 140 , 1300);
  PID_Time(0.044 , 0 , 1.2 , 30 , 500);
  drp(0.052 , 0 , 1.2 , 33, 1700);
  set(6); // 3
  bckk(40, 330); //---------!!
  turnLeft(34 , 34);

  PID_Time(0.084 , 0 , 1.2 , 35 , 180);
  cRtR(0.052 , 0 , 1.2 , 35 , 34 , 34 , 30 , 220 , 1300);
  set(6);  // 4
  turnLeft(28 , 28);

  PID_Time(0.064 , 0 , 1.2 , 35 , 300);
  cRtR(0.052 , 0 , 1.2 , 35 , 34 , 34 , 30 , 210 , 1300);
  set(6); // 5
  turnLeft(28, 28);

  PID_Time(0.052 , 0 , 1.2 , 40 , 350);
  cRtR(0.052 , 0 , 1.2 , 35 , 32 , 32 , 40 , 90 , 1300);
  PID_Time(0.022 , 0 , 1 , 35 , 150);
  drp(0.022 , 0 , 1 , 30, 1700);
  set(6); // 6
  turnLeft(23, 23);
  PID_Time(0.042 , 0 , 1.2 , 19 , 350);
  drp(0.042 , 0 , 1.2 , 25, 1700);
  set(6); // 7
  bckk(30, 260);
  turnLeft(34, 34);
  PID_Time(0.042 , 0 , 1.2 , 30 , 170);
  cRtR(0.052 , 0 , 1.3 , 40 , 30 , 30 , 30 , 100 , 1300);

  PID_Time(0.075 , 0 , 2 , 40 , 600);
  cRtR(0.052 , 0 , 0.99 , 30 , 34 , 34 , 30 , 260 , 1500);
  set(6); // 8
  turnLeft(30, 30);

  PID_Time(0.095 , 0 , 2 , 35 , 390);
  cRtR(0.095 , 0 , 2 , 35 , 30 , 30 , 35 , 155 , 2000);
  PID_Time(0.044 , 0 , 1.2 , 31 , 170);
  drp(0.095 , 0 , 2 , 30, 1700);
  set(6); // 9
  bckk(40, 330); //---------!!!!!!!!!!!!!!!
  turnLeft(34 , 34);

  PID_Time(0.052 , 0 , 0.99 , 30 , 230);
  cRtR(0.052 , 0 , 0.99 , 35 , 30 , 30 , 35 , 190 , 1300);
  set(6); // 10
  turnLeft(34 , 34);

  PID_Time(0.052 , 0 , 0.99 , 30 , 100);
  cRtR(0.095 , 0 , 2 , 35 , 30 , 30 , 35 , 100 , 1600); //!!!!
  PID_Time(0.044 , 0 , 1.2 , 35 , 100);
  drp(0.095 , 0 , 2 , 31, 1700);
  set(6); // 11
  bckk(40, 330); //---------!!
  turnLeft(34 , 34);

  PID_Time(0.052 , 0 , 0.99 , 40 , 250);
  cRtR(0.052 , 0 , 0.99 , 30 , 30 , 30 , 30 , 200 , 1300);
  set(6); // 12
  turnLeft(34 , 34);

  PID_Time(0.052 , 0 , 1.2 , 33 , 1000);
  PID_cutLine(0.052 , 0 , 1.2 , 33 , 1 , 1300);
  // PID_Time(0.01 , 0 , 0.2 , 30 , 100);
  movef(30,30);
  delay(50);
  ao();
  tlm();
  movef(-30, -30);
  delay(450);
  ao();

  // delay(10000);

  // movef(30, 30);
  // delay(500);

  // turnRight(34, 34);
  // PID_Time(0.052 , 0 , 1.2 , 33 , 1315);
  // cLtL(0.052 , 0 , 1.2 , 30 , 34 , 34 , 30 , 180 , 1300);
  // set(6); // re1
  // turnRight(34 , 34);

  // cLtL(0.032 , 0 , 1.2 , 32 , 34 , 34 , 30 , 140 , 1300);
  // PID_Time(0.044 , 0 , 1.2 , 40 , 100);
  // drp(0.062 , 0 , 1.2 , 35, 1700);
  // set(6); // 3
  // bckk(40, 330); //---------!!
  // turnRight(34 , 34);

  // cLtL(0.052 , 0 , 1.2 , 30 , 34 , 34 , 30 , 180 , 1300);
  // set(6); // 2
  // turnRight(34 , 34);

  // cLtL(0.032 , 0 , 1.2 , 32 , 34 , 34 , 30 , 140 , 1300);
  // PID_Time(0.044 , 0 , 1.2 , 40 , 100);
  // drp(0.062 , 0 , 1.2 , 35, 1700);
  // set(6); // 3
  // bckk(40, 330); //---------!!
  // turnRight(34 , 34);

  // PID_Time(0.064 , 0 , 1.2 , 35 , 750);
  // cLtL(0.052 , 0 , 1.2 , 35 , 34 , 34 , 40 , 140 , 1300);
  // set(6); // 5
  // turnRight(29, 29);

  // PID_Time(0.052 , 0 , 1.2 , 40 , 350);
  // cLtL(0.052 , 0 , 1.2 , 35 , 29 , 29 , 40 , 90 , 1300);
  // PID_Time(0.022 , 0 , 1 , 35 , 150);
  // drp(0.022 , 0 , 1 , 30, 1700);
  // set(6); // 6
  // turnLeft(29, 29);
  // PID_Time(0.042 , 0 , 1.2 , 30 , 100);
  // drp(0.042 , 0 , 1.2 , 30, 1700);
  // set(6); // 7
  // bckk(30, 260);
  // turnLeft(34, 34);
  // PID_Time(0.042 , 0 , 1.2 , 30 , 170);
  // cLtL(0.052 , 0 , 1.3 , 40 , 30 , 30 , 30 , 100 , 1300);

  // PID_Time(0.064 , 0 , 1.2 , 35 , 750);
  // cLtL(0.052 , 0 , 1.2 , 35 , 34 , 34 , 40 , 140 , 1300);
  // set(6); // 5
  // turnRight(29, 29);





  
  ao();
  delay(200);
  beep();

  // set(3);
  
}
void loop()
{

  //movef(-20,20);
  //PD_move(0.055 , 0 , 0.7 , 40); //check
  //Serial.println(position1());
  // position1();
  // view();
  //PD_move(0.017 , 0 , 0 , 40);
  //Serial.println(analog(8));
  //Serial.println(position1());
}
